.. _hscp:

hfmm3dstoscp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstoscp(eps,zk,nsource,source,charge,pot)

.. code:: fortran

  subroutine hfmm3dstoscp_vec(nd,eps,zk,nsource,source,charge,pot)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|}

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hscg:

hfmm3dstoscg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstoscg(eps,zk,nsource,source,charge,pot,grad)

.. code:: fortran

  subroutine hfmm3dstoscg_vec(nd,eps,zk,nsource,source,charge,pot,grad)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|}

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hsdp:

hfmm3dstosdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstosdp(eps,zk,nsource,source,dipvec,pot)

.. code:: fortran

  subroutine hfmm3dstosdp_vec(nd,eps,zk,nsource,source,dipvec,pot)

This subroutine evaluates the potential 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hsdg:

hfmm3dstosdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstosdg(eps,zk,nsource,source,dipvec,pot,grad)

.. code:: fortran

  subroutine hfmm3dstosdg_vec(nd,eps,zk,nsource,source,dipvec,pot,grad)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hscdp:

hfmm3dstoscdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstoscdp(eps,zk,nsource,source,charge,dipvec,pot)

.. code:: fortran

  subroutine hfmm3dstoscdp_vec(nd,eps,zk,nsource,source,charge,dipvec,pot)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hscdg:

hfmm3dstoscdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstoscdg(eps,zk,nsource,source,charge,dipvec,pot,grad)

.. code:: fortran

  subroutine hfmm3dstoscdg_vec(nd,eps,zk,nsource,source,charge,dipvec,pot,grad)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _htcp:

hfmm3dstotcp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstotcp(eps,zk,nsource,source,charge,ntarg,targ,pottarg)

.. code:: fortran

  subroutine hfmm3dstotcp_vec(nd,eps,zk,nsource,source,charge,ntarg,targ,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|}

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _htcg:

hfmm3dstotcg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstotcg(eps,zk,nsource,source,charge,ntarg,targ,pottarg,gradtarg)

.. code:: fortran

  subroutine hfmm3dstotcg_vec(nd,eps,zk,nsource,source,charge,ntarg,targ,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|}

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _htdp:

hfmm3dstotdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstotdp(eps,zk,nsource,source,dipvec,ntarg,targ,pottarg)

.. code:: fortran

  subroutine hfmm3dstotdp_vec(nd,eps,zk,nsource,source,dipvec,ntarg,targ,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _htdg:

hfmm3dstotdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstotdg(eps,zk,nsource,source,dipvec,ntarg,targ,pottarg,gradtarg)

.. code:: fortran

  subroutine hfmm3dstotdg_vec(nd,eps,zk,nsource,source,dipvec,ntarg,targ,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _htcdp:

hfmm3dstotcdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstotcdp(eps,zk,nsource,source,charge,dipvec,ntarg,targ,pottarg)

.. code:: fortran

  subroutine hfmm3dstotcdp_vec(nd,eps,zk,nsource,source,charge,dipvec,ntarg,targ,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _htcdg:

hfmm3dstotcdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstotcdg(eps,zk,nsource,source,charge,dipvec,ntarg,targ,pottarg,gradtarg)

.. code:: fortran

  subroutine hfmm3dstotcdg_vec(nd,eps,zk,nsource,source,charge,dipvec,ntarg,targ,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hstcp:

hfmm3dstostcp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstostcp(eps,zk,nsource,source,charge,ntarg,targ,pot,pottarg)

.. code:: fortran

  subroutine hfmm3dstostcp_vec(nd,eps,zk,nsource,source,charge,ntarg,targ,pot,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|}

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hstcg:

hfmm3dstostcg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstostcg(eps,zk,nsource,source,charge,ntarg,targ,pot,grad,pottarg,gradtarg)

.. code:: fortran

  subroutine hfmm3dstostcg_vec(nd,eps,zk,nsource,source,charge,ntarg,targ,pot,grad,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|}

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hstdp:

hfmm3dstostdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstostdp(eps,zk,nsource,source,dipvec,ntarg,targ,pot,pottarg)

.. code:: fortran

  subroutine hfmm3dstostdp_vec(nd,eps,zk,nsource,source,dipvec,ntarg,targ,pot,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hstdg:

hfmm3dstostdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstostdg(eps,zk,nsource,source,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

.. code:: fortran

  subroutine hfmm3dstostdg_vec(nd,eps,zk,nsource,source,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hstcdp:

hfmm3dstostcdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine hfmm3dstostcdp(eps,zk,nsource,source,charge,dipvec,ntarg,targ,pot,pottarg)

.. code:: fortran

  subroutine hfmm3dstostcdp_vec(nd,eps,zk,nsource,source,charge,dipvec,ntarg,targ,pot,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _hstcdg:

hfmm3dstostcdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine hfmm3dstostcdg(eps,zk,nsource,source,charge,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

.. code:: fortran

  subroutine hfmm3dstostcdg_vec(nd,eps,zk,nsource,source,charge,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} c_{j} \frac{e^{ik\|x- x_{j}\|}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{e^{ik\|x-x_{j}\|}}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    zk: double complex
          Helmholtz parameter (k)
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Helmholtz FMM <fortran-c.html#helm>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


