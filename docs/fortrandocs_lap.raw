.. _lscp:

lfmm3dstoscp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstoscp(eps,nsource,source,charge,pot)

.. code:: fortran

  subroutine lfmm3dstoscp_vec(nd,eps,nsource,source,charge,pot)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|}

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lscg:

lfmm3dstoscg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstoscg(eps,nsource,source,charge,pot,grad)

.. code:: fortran

  subroutine lfmm3dstoscg_vec(nd,eps,nsource,source,charge,pot,grad)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|}

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lsdp:

lfmm3dstosdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstosdp(eps,nsource,source,dipvec,pot)

.. code:: fortran

  subroutine lfmm3dstosdp_vec(nd,eps,nsource,source,dipvec,pot)

This subroutine evaluates the potential 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lsdg:

lfmm3dstosdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstosdg(eps,nsource,source,dipvec,pot,grad)

.. code:: fortran

  subroutine lfmm3dstosdg_vec(nd,eps,nsource,source,dipvec,pot,grad)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lscdp:

lfmm3dstoscdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstoscdp(eps,nsource,source,charge,dipvec,pot)

.. code:: fortran

  subroutine lfmm3dstoscdp_vec(nd,eps,nsource,source,charge,dipvec,pot)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lscdg:

lfmm3dstoscdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstoscdg(eps,nsource,source,charge,dipvec,pot,grad)

.. code:: fortran

  subroutine lfmm3dstoscdg_vec(nd,eps,nsource,source,charge,dipvec,pot,grad)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source locations $x=x_{j}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _ltcp:

lfmm3dstotcp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstotcp(eps,nsource,source,charge,ntarg,targ,pottarg)

.. code:: fortran

  subroutine lfmm3dstotcp_vec(nd,eps,nsource,source,charge,ntarg,targ,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|}

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _ltcg:

lfmm3dstotcg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstotcg(eps,nsource,source,charge,ntarg,targ,pottarg,gradtarg)

.. code:: fortran

  subroutine lfmm3dstotcg_vec(nd,eps,nsource,source,charge,ntarg,targ,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|}

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _ltdp:

lfmm3dstotdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstotdp(eps,nsource,source,dipvec,ntarg,targ,pottarg)

.. code:: fortran

  subroutine lfmm3dstotdp_vec(nd,eps,nsource,source,dipvec,ntarg,targ,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _ltdg:

lfmm3dstotdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstotdg(eps,nsource,source,dipvec,ntarg,targ,pottarg,gradtarg)

.. code:: fortran

  subroutine lfmm3dstotdg_vec(nd,eps,nsource,source,dipvec,ntarg,targ,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _ltcdp:

lfmm3dstotcdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstotcdp(eps,nsource,source,charge,dipvec,ntarg,targ,pottarg)

.. code:: fortran

  subroutine lfmm3dstotcdp_vec(nd,eps,nsource,source,charge,dipvec,ntarg,targ,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _ltcdg:

lfmm3dstotcdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstotcdg(eps,nsource,source,charge,dipvec,ntarg,targ,pottarg,gradtarg)

.. code:: fortran

  subroutine lfmm3dstotcdg_vec(nd,eps,nsource,source,charge,dipvec,ntarg,targ,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the target locations $x=t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lstcp:

lfmm3dstostcp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstostcp(eps,nsource,source,charge,ntarg,targ,pot,pottarg)

.. code:: fortran

  subroutine lfmm3dstostcp_vec(nd,eps,nsource,source,charge,ntarg,targ,pot,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|}

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lstcg:

lfmm3dstostcg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstostcg(eps,nsource,source,charge,ntarg,targ,pot,grad,pottarg,gradtarg)

.. code:: fortran

  subroutine lfmm3dstostcg_vec(nd,eps,nsource,source,charge,ntarg,targ,pot,grad,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|}

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lstdp:

lfmm3dstostdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstostdp(eps,nsource,source,dipvec,ntarg,targ,pot,pottarg)

.. code:: fortran

  subroutine lfmm3dstostdp_vec(nd,eps,nsource,source,dipvec,ntarg,targ,pot,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lstdg:

lfmm3dstostdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstostdg(eps,nsource,source,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

.. code:: fortran

  subroutine lfmm3dstostdg_vec(nd,eps,nsource,source,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = -\sum_{j=1}^{N} v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lstcdp:

lfmm3dstostcdp
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential

.. code:: fortran

  subroutine lfmm3dstostcdp(eps,nsource,source,charge,dipvec,ntarg,targ,pot,pottarg)

.. code:: fortran

  subroutine lfmm3dstostcdp_vec(nd,eps,nsource,source,charge,dipvec,ntarg,targ,pot,pottarg)

This subroutine evaluates the potential 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


.. _lstcdg:

lfmm3dstostcdg
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

- Evaluation points: Sources and Targets
- Interaction kernel: Charges and Dipoles
- Outputs requested: Potential and Gradient

.. code:: fortran

  subroutine lfmm3dstostcdg(eps,nsource,source,charge,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

.. code:: fortran

  subroutine lfmm3dstostcdg_vec(nd,eps,nsource,source,charge,dipvec,ntarg,targ,pot,grad,pottarg,gradtarg)

This subroutine evaluates the potential and its gradient 


  .. math::

      u(x) = \sum_{j=1}^{N} \frac{c_{j}}{\|x-x_{j}\|} - v_{j} \cdot \nabla \left( \frac{1}{\|x-x_{j}\|}\right)

at the source and target locations $x=x_{j},t_{i}$. When $x=x_{m}$, the term corresponding to $x_{m}$ is dropped from the sum.

Input arguments:

  -    nd: integer
          number of densities
  -    eps: double precision
          precision requested
  -    nsource: integer
          Number of sources (nsource)
  -    source: double precision(3,nsource)
          Source locations ($x_{j}$)
  -    charge: double complex(nsource)
          Charge strengths ($c_{j}$)
  -    dipvec: double complex(3,nsource)
          Dipole strengths ($v_{j}$)
  -    ntarg: integer
          Number of targets
  -    targ: double precision(3,ntarg)
          Target locations ($t_{i}$)


Output arguments:

  -    pot: double complex(nsource)
          Potential at source locations ($u(x_{j})$)
  -    grad: double complex(3,nsource)
          Gradient at source locations ($\nabla u(x_{j})$)
  -    pottarg: double complex(ntarg)
          Potential at target locations ($u(t_{i})$)
  -    gradtarg: double complex(3,ntarg)
          Gradient at target locations ($\nabla u(t_{i})$)


.. container:: rttext

  `Back to Laplace FMM <fortran-c.html#lap>`__

.. container:: rttext

  `Back to top <fortran-c.html#fcexmp>`__


